<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Jackjin's Home</title><link>http://jackjin-cn.github.io/</link><description></description><lastBuildDate>Tue, 10 Jul 2018 22:45:09 +0800</lastBuildDate><item><title>antiword</title><link>http://jackjin-cn.github.io/2018/2018-07-10_22-35_antiword.html</link><description>&lt;h1&gt;Title:antiword&lt;/h1&gt;
&lt;h2&gt;一直想找一个 在mac下能用的doc to docx的方法&lt;/h2&gt;
&lt;p&gt;结果找到一个叫&lt;em&gt;antiword&lt;/em&gt;的开源软件,以命令行的方式把doc转成纯文本之类的，比用python方便一点，还可以转成pdf之类的 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不过，好像还有一个参数，可以转成xml之类的格式 ，docbook，我初步试了一下，找到一个把odcbook 转成 docx的程序，结果行不通，不能把docbook格式转成docx。有点遗憾。&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Tue, 10 Jul 2018 22:35:04 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-10:/2018/2018-07-10_22-35_antiword.html</guid><category>mac</category><category>work</category><category>python</category><category>command line</category></item><item><title>一行代码搞定改名&amp;copy文件</title><link>http://jackjin-cn.github.io/2018/2018-07-04_19-12_yi-xing-dai-ma-gao-ding-gai-ming-copywen-jian.html</link><description>&lt;h1&gt;一行代码搞定改名&amp;amp;copy文件&lt;/h1&gt;
&lt;h2&gt;1. 分段探索的过程&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;[jjb@ ~/pelicanoutput/pelican/pelican-themes #6]$for i in &lt;code&gt;find . -name screenshot.png&lt;/code&gt; ;do echo ${i} ;done;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./bricks/screenshot.png
./monospace/screenshot.png
./foundation-default-colours/screenshot.png
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;2. 分段探索的过程&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;[jjb@ ~/pelicanoutput/pelican/pelican-themes #8]$for i in &lt;code&gt;find . -name screenshot.png&lt;/code&gt; ;do echo  &lt;code&gt;dirname $i&lt;/code&gt;;done;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./bricks
./monospace …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Wed, 04 Jul 2018 19:12:53 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-04:/2018/2018-07-04_19-12_yi-xing-dai-ma-gao-ding-gai-ming-copywen-jian.html</guid><category>bash</category><category>shell</category></item><item><title>brew 中切换软件版本</title><link>http://jackjin-cn.github.io/2018/2018-07-04_12-14_brew-zhong-qie-huan-ruan-jian-ban-ben.html</link><description>&lt;h1&gt;brew 中切换软件版本&lt;/h1&gt;
&lt;p&gt;我有更新软件的习惯，习惯性的每天更新一下。比如brew ,pip3等。&lt;/p&gt;
&lt;p&gt;这不，前天把brew 就把python 3.6.5 升级到了python 3.7了，这个是大升级，结果python库都没有了，当然可以另行安装，也很方便，反正有写了批量更新的脚本，但没有到还有兼容性的问题。&lt;/p&gt;
&lt;p&gt;网上找一堆办法，有的命令已经过期了 &lt;em&gt;brew versions&lt;/em&gt;,有的太复杂，看不明白。
后来还是找到了一个办法，提前是老版本python没有删除。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;brew info python3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stable&lt;/span&gt; &lt;span class="mf"&gt;3.7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bottled&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;HEAD&lt;/span&gt;
&lt;span class="n"&gt;Interpreted&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oriented&lt;/span&gt; &lt;span class="n"&gt;programming&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;
&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;python&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="sr"&gt;/usr …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Wed, 04 Jul 2018 12:14:13 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-04:/2018/2018-07-04_12-14_brew-zhong-qie-huan-ruan-jian-ban-ben.html</guid><category>brew</category><category>python</category></item><item><title>sed的一点用处</title><link>http://jackjin-cn.github.io/2018/2018-07-03_14-32_sedde-yi-dian-yong-chu.html</link><description>&lt;h1&gt;sed的一点用处&lt;/h1&gt;
&lt;p&gt;最近在弄pelican 与 github的博客，下载很不要模板，更换很不方便，想能不能用命令修改，google一下，还是真有办法的。&lt;/p&gt;
&lt;h2&gt;提醒不要用mac osx 自带的sed&lt;/h2&gt;
&lt;h2&gt;我用brew 安装了gnu-sed&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gsed -i 99c\jtheme=&amp;quot;theme_name&amp;quot; pelianconf.py

-i 表示直接修改文件
99c\jtheme=&amp;quot;theme_name&amp;quot;  表示将99行的内容直接替换(c)成jtheme=&amp;quot;theme_name&amp;quot;  \是起一个分隔的作用。
有不明白的地方可以看教程，语法有点类似vim
````

## 下面是我自己用的脚本，在选中的theme的目录下运行
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;!/usr/bin/env python3&lt;/h1&gt;
&lt;h1&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import os
cwd=os.getcwd()
path=(cwd.split('/'))
cfname …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Tue, 03 Jul 2018 14:32:35 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-03:/2018/2018-07-03_14-32_sedde-yi-dian-yong-chu.html</guid><category>文件处理</category><category>linux</category><category>mac</category></item><item><title>Pelican 上传到github</title><link>http://jackjin-cn.github.io/2018/2018-07-02_22-07_pelican-shang-chuan-dao-github.html</link><description>&lt;h1&gt;Pelican 上传到github&lt;/h1&gt;
&lt;p&gt;折腾了半天，应该可以在几台电脑上上传博客内容了吧。&lt;/p&gt;
&lt;h3&gt;初始部分&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init
git add .
git commit
git remote add origin https://github.com/jackjin-cn/jackjin-cn.github.io.git

#先取回云端内容
git pull origin master
git commit
git push origin master #可以加参数 -f
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;我的上传博客到githubio的脚本&lt;/h2&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/pelicanoutput/blog
makeriji
git …&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Mon, 02 Jul 2018 22:07:45 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-02:/2018/2018-07-02_22-07_pelican-shang-chuan-dao-github.html</guid><category>pelican</category><category>github</category><category>vim</category><category>python</category></item><item><title>Vim 中插入日期</title><link>http://jackjin-cn.github.io/2018/2018-07-02_12-34_vim-zhong-cha-ru-ri-qi.html</link><description>&lt;h1&gt;Vim 中插入日期&lt;/h1&gt;
&lt;h2&gt;1. 写blog的时候要前几行插入固定的内容，时间找到以下的脚本&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function! TitleInsert()
call setline(1,&amp;quot;Title:&amp;quot;)
call setline(2,&amp;quot;Date: &amp;quot;. strftime(&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;))
call setline(3,&amp;quot;Modified: &amp;quot;)
&amp;quot;call setline(3,&amp;quot;Modified: &amp;quot;. strftime(&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;))
call setline(4,&amp;quot;Category:  &amp;quot;)
call setline(5,&amp;quot;Tags: &amp;quot;)
call setline(6,&amp;quot;Author:天地一沙鸥 …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Mon, 02 Jul 2018 12:34:37 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-02:/2018/2018-07-02_12-34_vim-zhong-cha-ru-ri-qi.html</guid><category>vim</category><category>script</category><category>tips</category></item><item><title>批量cp936toutf8</title><link>http://jackjin-cn.github.io/2018/2018-07-01_22-42_pi-liang-cp936toutf8.html</link><description>&lt;h2&gt;今天在用pelican转网页的时候，原来在&lt;strong&gt;windows&lt;/strong&gt;下写的文件，代码是&lt;strong&gt;cp936&lt;/strong&gt;，识别不了，要转成&lt;strong&gt;utf8&lt;/strong&gt;格式。&lt;/h2&gt;
&lt;p&gt;通过搜索找到了以下代码&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="sb"&gt;`&lt;/span&gt;find . -name &lt;span class="s2"&gt;&amp;quot;*.cal&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    vim -s ~/bin/cp936-utf8.vi &lt;span class="nv"&gt;$i&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

用写一段vim用的vi命令就可以了
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;cp936-utf8.vi&amp;quot;
:set fileencoding=utf8
:wq!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;懂vim的看的懂，这两句做了两件事&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置文件编码&lt;/li&gt;
&lt;li&gt;保存写入&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;另外也学习了  &lt;strong&gt;find&lt;/strong&gt; 的用法&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -name …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Sun, 01 Jul 2018 22:42:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-01:/2018/2018-07-01_22-42_pi-liang-cp936toutf8.html</guid><category>unicode</category><category>vim</category><category>encoding</category></item><item><title>再次配置pelican写博客</title><link>http://jackjin-cn.github.io/2018/2018-07-01_20-13_zai-ci-pei-zhi-pelicanxie-bo-ke.html</link><description>&lt;h1&gt;今天再次折腾一下，争取在三个机器上可以使用。&lt;/h1&gt;
&lt;p&gt;在～目前建立下面的目录了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pelicanoutput&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;blog #blog的输出网页&lt;/p&gt;
&lt;p&gt;riji 同上&lt;/p&gt;
&lt;p&gt;pelican&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pelican-plugins&lt;/p&gt;
&lt;p&gt;pelican-theme&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;riji-pelicanconf.py&lt;/p&gt;
&lt;p&gt;blog-pelicanconf.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;另外，还改到了 python 库中的 &lt;em&gt;pelican&lt;/em&gt; 中 &lt;strong&gt;reader.py&lt;/strong&gt; 中内容 增加了 'cal' ,'blog' 的文件的扩展名，前面有写过的。&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Sun, 01 Jul 2018 20:13:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2018-07-01:/2018/2018-07-01_20-13_zai-ci-pei-zhi-pelicanxie-bo-ke.html</guid><category>pelican</category><category>折腾</category></item><item><title>thinkpad L440 的wifi debian 网卡驱动</title><link>http://jackjin-cn.github.io/2016/2016-01-24_18-41_thinkpad-l440-de-wifi-debian-wang-qia-qu-dong.html</link><description>&lt;h2&gt;thinkpad L400 的wifi debian 网卡驱动&lt;/h2&gt;
&lt;p&gt;今天又弄起了&lt;strong&gt;thinkpad l440&lt;/strong&gt;,无线网卡驱动有问题，连上后马上会断线，网上搜了半天，方案很多，好像不太成功。无线网卡的型号是 realtak 8192ee.&lt;/p&gt;
&lt;p&gt;今天偶然发现，几个命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsmod |grep rtl
发现胡乱加载好几个网卡驱动
便用 modprobe -r rtlwifi 这样的命令删除多余的驱动。
最后发现管用的好像是下载的 realtek_new 管用，具体驱动名是 8192ee.
modprobe 8192ee
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Sun, 24 Jan 2016 18:41:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-24:/2016/2016-01-24_18-41_thinkpad-l440-de-wifi-debian-wang-qia-qu-dong.html</guid><category>debian</category><category>linux</category><category>wifi</category><category>驱动</category><category>realtek</category></item><item><title>vim的verbose命令</title><link>http://jackjin-cn.github.io/2016/2016-01-19_10-00_vimde-verboseming-ling.html</link><description>&lt;p&gt;在鼓捣autocmd的时候，看到vim的audocmd的帮助&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set verbose=9
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;发现有很多额外的显示，值得一看，也能发现很多非常有意思的东西！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Tue, 19 Jan 2016 10:00:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-19:/2016/2016-01-19_10-00_vimde-verboseming-ling.html</guid><category>vim</category></item><item><title>vim中的autocmd</title><link>http://jackjin-cn.github.io/2016/2016-01-19_08-58_vimzhong-de-autocmd.html</link><description>&lt;p&gt;原来做了个vim的写日记的模板，并且为它写了语法高亮文件。效果还是可以的，不过有个问题，就是，写新的日记的时候，不能语法高亮，只能保存后才能高亮，也试过autocmd的其它形式，也是不行，不过，昨天在尝试autocmd的时候，无意中发发现了解决办法。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;autocmd BufReadpre *.mytext set syn=mytext
mytext是指代自己定义的文件格式和语法文件
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Tue, 19 Jan 2016 08:58:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-19:/2016/2016-01-19_08-58_vimzhong-de-autocmd.html</guid><category>autocmd</category><category>vim</category></item><item><title>cygwin</title><link>http://jackjin-cn.github.io/2016/2016-01-11_22-11_cygwin.html</link><description>&lt;h1&gt;cygiwn的路径&lt;/h1&gt;
&lt;p&gt;windows下的C：在cygwin中表示为&lt;code&gt;/cygwin/c/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;cygwin会导入windows中的path,当然也可以在cygwin中的path中加入windows的path，不过，写法上要向上面一样。&lt;/p&gt;
&lt;p&gt;另外，如果遇到到&lt;strong&gt;permision denied&lt;/strong&gt;，请用&lt;strong&gt;管理员身份&lt;/strong&gt;运行cygwin.bat&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Mon, 11 Jan 2016 22:11:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-11:/2016/2016-01-11_22-11_cygwin.html</guid><category>bash</category><category>cygwin</category></item><item><title>bash中for的文件通配符的问题</title><link>http://jackjin-cn.github.io/2016/2016-01-09_16-08_bashzhong-forde-wen-jian-tong-pei-fu-de-wen-ti.html</link><description>&lt;p&gt;最近在整理自己的文档，还学了一点awk的操作，awk对文本的处理真是蛮强大的。&lt;/p&gt;
&lt;p&gt;我需要经常用脚本来对一批文件处理。比如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aa$&amp;gt; for file in *.txt;do echo $file;done#结果可以正常显示
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;因为经常要用&lt;strong&gt;for&lt;/strong&gt;命令的这种形式，于是写了一个脚本(allfiles)：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#$1是一个进行处理文件的命令或者脚本&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; files in &lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="nv"&gt;$files&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;然后在shell里输入:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aa@@@$: allfiles *.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果确不正常，只有第一个文件被匹配，改来改去，发现原因：shell在处理命令行时已经自动把&lt;strong&gt;&lt;em&gt;.txt&lt;/em&gt;* 替换成符合条件的列表了，所以产生问题。后来发现的办法是在文件上加中 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Sat, 09 Jan 2016 16:08:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-09:/2016/2016-01-09_16-08_bashzhong-forde-wen-jian-tong-pei-fu-de-wen-ti.html</guid><category>bash</category><category>for</category><category>文件操作</category></item><item><title>awk文本工具的学习</title><link>http://jackjin-cn.github.io/2016/2016-01-09_09-59_awkwen-ben-gong-ju-de-xue-xi.html</link><description>&lt;p&gt;&lt;a href="http://coolshell.cn/articles/9070.html"&gt;转自：酷 壳 AWK 简明教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.runoob.com/linux/linux-comm-awk.html"&gt;转自：Linux awk 命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;自己尝试了一下,感觉很强大。&lt;/p&gt;
&lt;p&gt;特别是模式匹配和过滤功能。&lt;/p&gt;
&lt;p&gt;输出包含：的行，并加上行号。/模式/,NR是等号&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;awk   &amp;#39;/^#/{print NR,$0 }&amp;#39; ~/diary/2015/09/2015-09-08.cal
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;后来下载了windows版的awk，是3.1.6版&lt;/p&gt;
&lt;p&gt;用法上和linux版的没有区别，不过，有一点要注意是要把&lt;strong&gt;&lt;code&gt;单引号'&lt;/code&gt;换成&lt;code&gt;双引号"&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Sat, 09 Jan 2016 09:59:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-09:/2016/2016-01-09_09-59_awkwen-ben-gong-ju-de-xue-xi.html</guid><category>awk</category><category>linux</category><category>本文</category><category>shell</category><category>windows</category></item><item><title>git 本地删除后的问题</title><link>http://jackjin-cn.github.io/2016/2016-01-08_23-09_git-ben-di-shan-chu-hou-de-wen-ti.html</link><description>&lt;h2&gt;git 本地删除后的问题&lt;/h2&gt;
&lt;p&gt;在用pelican生成网页的时假，如果不小心用&lt;code&gt;make clean&lt;/code&gt;的话，会把&lt;strong&gt;.git&lt;/strong&gt;删除，就会产生配对问题，需要重新配对。&lt;/p&gt;
&lt;p&gt;对于网页不需要保留远程文件，所以就如下操作&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init
git add .
git commit -m &amp;#39;update&amp;#39;
git remote rm origin
git push --force origin master  强制推送
git push -u origin master 重新远程与本地对应
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Fri, 08 Jan 2016 23:09:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-08:/2016/2016-01-08_23-09_git-ben-di-shan-chu-hou-de-wen-ti.html</guid><category>git</category></item><item><title>vim中的find命令，打开文件很方便</title><link>http://jackjin-cn.github.io/2016/2016-01-08_15-07_vimzhong-de-findming-ling-da-kai-wen-jian-hen-fang-bian.html</link><description>&lt;p&gt;这几天看《Vim实用技巧》,其中介绍了 &lt;strong&gt;:find&lt;/strong&gt; 命令的使用&lt;/p&gt;
&lt;p&gt;在vim的配件文件&lt;code&gt;.vimrc or _vimrc&lt;/code&gt;进行如下设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set path+=yourdir1/**,youdir2/**
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就可以在vim中方便的打开设置好的目录下的文件， &lt;strong&gt; 《Vim实用技巧》  &lt;/strong&gt; 还有更多的技巧，可以值得去看看。&lt;/p&gt;
&lt;p&gt;另外，在网上无意中发现《Vim实用技巧》的作者的博客&lt;a href="http://easwy.com/blog/"&gt;易水博客&lt;/a&gt;,值得一看。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Fri, 08 Jan 2016 15:07:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-08:/2016/2016-01-08_15-07_vimzhong-de-findming-ling-da-kai-wen-jian-hen-fang-bian.html</guid><category>vim</category><category>文件</category><category>find</category><category>path</category></item><item><title>修改pelican所支持的内容文件的扩展名</title><link>http://jackjin-cn.github.io/2016/2016-01-06_19-58_xiu-gai-pelicansuo-zhi-chi-de-nei-rong-wen-jian-de-kuo-zhan-ming.html</link><description>&lt;h2&gt;修改pelican所支持的内容文件的扩展名&lt;/h2&gt;
&lt;p&gt;pelican的内容文本文件只支持常见markdown的扩展名&lt;code&gt;markdown,md,mkd&lt;/code&gt;等，我比较喜欢用vim制作自己的文件模板，这样就需要自己取文件扩展名，比如*.blog，前几天没想到办法，今天找到办法了。&lt;/p&gt;
&lt;p&gt;用grep 在 &lt;strong&gt;/usr/local/lib/python2.7/dist-packages/pelican&lt;/strong&gt; 找了下&lt;strong&gt;md&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$/usr/local/lib/python2.7/dist-packages/pelican$ grep &amp;#39;md&amp;#39; *.py
结果如下：
readers.py:    file_extensions = [&amp;#39;md&amp;#39;, &amp;#39;markdown&amp;#39;, &amp;#39;mkd&amp;#39;, &amp;#39;mdown&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;于是只是修改&lt;code&gt;readers.py&lt;/code&gt;，加入自己想要的扩展名就可以了。&lt;/p&gt;
&lt;p&gt;我没有找到其它办法，不过这个方法还算方便吧。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Wed, 06 Jan 2016 19:58:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-06:/2016/2016-01-06_19-58_xiu-gai-pelicansuo-zhi-chi-de-nei-rong-wen-jian-de-kuo-zhan-ming.html</guid><category>pelican</category><category>文件名</category><category>markdown</category><category>bash</category></item><item><title>在linux下把cp936转成utf-8</title><link>http://jackjin-cn.github.io/2016/2016-01-06_19-43_zai-linuxxia-ba-cp936zhuan-cheng-utf-8.html</link><description>&lt;h2&gt;在linux下把cp936转成utf-8&lt;/h2&gt;
&lt;p&gt;今天需要把原来写的文字用博客的形式发布，用pelican转换的第一个问题就是文件的内码格式不到，原来是 &lt;strong&gt;cp936&lt;/strong&gt; (中文ASCII)的形式，需要转成&lt;strong&gt;utf-8&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;网上找了一下，可以用&lt;code&gt;iconv&lt;/code&gt; 这个工具，不过不支持批量转换，于是又搜了一下，用bash写了一个，在此记录一下。
另外说明一下，&lt;strong&gt;iconv&lt;/strong&gt; 不支持自动识别文件编码，要手动指定&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; file in *.txt 
    &lt;span class="k"&gt;do&lt;/span&gt; iconv -c -f gb18030 -t utf8 &lt;span class="nv"&gt;$file&lt;/span&gt; -o &lt;span class="nv"&gt;$file&lt;/span&gt;.uu
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Wed, 06 Jan 2016 19:43:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-06:/2016/2016-01-06_19-43_zai-linuxxia-ba-cp936zhuan-cheng-utf-8.html</guid><category>linux</category><category>bash</category><category>code</category><category>中文</category></item><item><title>在vim中用pandoc进行预览</title><link>http://jackjin-cn.github.io/2016/2016-01-05_17-37_zai-vimzhong-yong-pandocjin-xing-yu-lan.html</link><description>&lt;h2&gt;在vim中用pandoc进行预览&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;----------生成打包图片的单一html文件
map &amp;lt;LEADER&amp;gt;mh &amp;lt;ESC&amp;gt;:w&amp;lt;CR&amp;gt;&amp;lt;ESC&amp;gt;:silent !pandoc  -s --self-contained % -c paht/to/style.css -o %:r.html&amp;lt;CR&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://jackjin-cn.github.io/2016/2016-01-05_17-28_pandocde-yong-fa-1.html"&gt;参见《pandoc的用法（1）》&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Tue, 05 Jan 2016 17:37:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-05:/2016/2016-01-05_17-37_zai-vimzhong-yong-pandocjin-xing-yu-lan.html</guid><category>软件</category><category>vim</category><category>pandoc</category><category>html</category></item><item><title>pandoc的用法（1）</title><link>http://jackjin-cn.github.io/2016/2016-01-05_17-28_pandocde-yong-fa-1.html</link><description>&lt;h2&gt;pandoc的用法（1）&lt;/h2&gt;
&lt;p&gt;用vim写markdown，自己在.vimrc里也写快捷命令进行预览，感觉还是很方便的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pandoc在生成html文件的时候，可以支持css，还可以生成单独的文件，包含在图片里面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pandoc -c style.css  #包含css样式（可以包括路径,但html和css是分离）
pandoc -s -with--contained  #生成单一文件（可以把css，图片的包含在一个html文件中,生成docx文件也可以用这个参数，图片被包含在docx文件中）
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://jackjin-cn.github.io/2016/2016-01-05_17-37_zai-vimzhong-yong-pandocjin-xing-yu-lan.html"&gt;参见我在vim中用pandoc进行预览&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">天地一沙鸥</dc:creator><pubDate>Tue, 05 Jan 2016 17:28:00 +0800</pubDate><guid isPermaLink="false">tag:jackjin-cn.github.io,2016-01-05:/2016/2016-01-05_17-28_pandocde-yong-fa-1.html</guid><category>pandoc</category><category>vim</category><category>html</category><category>css</category></item></channel></rss>